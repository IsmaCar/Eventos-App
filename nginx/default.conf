server {
 listen 80;
 server_name localhost;

 # Redirige todas las peticiones HTTP a HTTPS
 return 301 https://$host$request_uri;
}

server {
 listen 443 ssl;
 server_name localhost;#tu_dominio_o_IP publica
 # Configuración SSL con las rutas a las claves y los certificados
 ssl_certificate /etc/nginx/certs/selfsigned.crt;
 ssl_certificate_key /etc/nginx/certs/selfsigned.key;
 # Opciones adicionales de seguridad
 ssl_protocols TLSv1.2 TLSv1.3;
 ssl_prefer_server_ciphers on;
 ssl_ciphers HIGH:!aNULL:!MD5;


  location / {
    proxy_pass http://frontend:5173;

    #persistencia de la información original del cliente
    #pasa el nombre del host o dominio del cliente
    proxy_set_header Host $host;
    #pasa la ip original del cliente
    proxy_set_header X-Real-IP $remote_addr;
    #pasa las ip del cliente y las de los proxies intermedios si existen
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #envia información sobre si la solicitud es http o https
    proxy_set_header X-Forwarded-Proto $scheme;
    #soporte para websockets y SSE para mantener la conexión abierta
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #soporte para tiempos de conexión y respuesta lentos
    proxy_connect_timeout 60s; #tiempo máximo de conexión
    proxy_send_timeout 60s; #tiempo máximo para enviar la solicitud
    proxy_read_timeout 60s; #tiempo máximo para recibir la respuesta
  }
  # Bloque específico para manejar /api/ paths
  location /api/ {
    # Important - prevent any redirects for the API
    absolute_redirect off;
    
    # Handle OPTIONS preflight requests for CORS
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://localhost' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
      add_header 'Access-Control-Max-Age' 3600 always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Content-Type' 'text/plain charset=UTF-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }
    
    # Add CORS headers for regular API responses
    add_header 'Access-Control-Allow-Origin' 'https://localhost' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
    
    # Usar proxy_pass sin barra final para mantener la URL original
    proxy_pass http://backend:8000;

    #persistencia de la información original del cliente
    #pasa el nombre del host o dominio del cliente
    proxy_set_header Host $host;
    #pasa la ip original del cliente
    proxy_set_header X-Real-IP $remote_addr;
    #pasa las ip del cliente y las de los proxies intermedios si existen
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #envia información sobre si la solicitud es http o https
    proxy_set_header X-Forwarded-Proto $scheme;
    #soporte para websockets y SSE para mantener la conexión abierta
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #soporte para tiempos de conexión y respuesta lentos
    proxy_connect_timeout 120s; #tiempo máximo de conexión
    proxy_send_timeout 120s; #tiempo máximo para enviar la solicitud
    proxy_read_timeout 120s; #tiempo máximo para recibir la respuesta
  }
  
  location /phpmyadmin/ {
    proxy_pass http://phpmyadmin:80;

    #persistencia de la información original del cliente
    #pasa el nombre del host o dominio del cliente
    proxy_set_header Host $host;
    #pasa la ip original del cliente
    proxy_set_header X-Real-IP $remote_addr;
    #pasa las ip del cliente y las de los proxies intermedios si existen
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #envia información sobre si la solicitud es http o https
    proxy_set_header X-Forwarded-Proto $scheme;
    #soporte para websockets y SSE para mantener la conexión abierta
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    #soporte para tiempos de conexión y respuesta lentos
    proxy_connect_timeout 60s; #tiempo máximo de conexión
    proxy_send_timeout 60s; #tiempo máximo para enviar la solicitud
    proxy_read_timeout 60s; #tiempo máximo para recibir la respuesta
  }
    
  # Configuración para servir archivos estáticos de uploads
  location /uploads/ {
    # Add CORS headers
    add_header 'Access-Control-Allow-Origin' 'https://localhost' always;
    add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Cache-Control' 'public, max-age=3600' always;
    
    # Manejar OPTIONS requests para CORS
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://localhost' always;
      add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
      add_header 'Access-Control-Max-Age' 3600 always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Content-Type' 'text/plain charset=UTF-8' always;
      add_header 'Content-Length' 0 always;
      return 204;
    }
    
    # Prevenir redirecciones
    absolute_redirect off;
    
    # Proxy al backend
    proxy_pass http://backend:8000/uploads/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}